{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-22T17:29:52.166Z",
    "end": "2022-07-22T17:29:55.315Z",
    "duration": 3149,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f415d907-e826-4365-93ed-3e606ec67915",
      "title": "",
      "fullFile": "cypress/integration/2.usuarios.tp.spec.js",
      "file": "cypress/integration/2.usuarios.tp.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
          "title": "Casos de teste positivos sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CTP02 - Deve buscar todos os usuários cadastrados",
              "fullTitle": "Casos de teste positivos sobre a rota /usuarios da API Serverest CTP02 - Deve buscar todos os usuários cadastrados",
              "timedOut": null,
              "duration": 590,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  expect(res.status).to.be.eq(200);\n  cy.contractValidator(res, 'get-usuarios', 200).then(res => expect(res).to.be.eq('Contrato válido!'));\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "3cc415ec-7c9c-45f0-841f-3104c0c593d2",
              "parentUUID": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTP03 - Deve cadastrar um novo usuário com sucesso",
              "fullTitle": "Casos de teste positivos sobre a rota /usuarios da API Serverest CTP03 - Deve cadastrar um novo usuário com sucesso",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarUsuarioComSucesso().then(res => {\n  expect(res.status).to.be.eq(201);\n  cy.contractValidator(res, 'post-usuarios', 201).then(res => expect(res).to.be.eq('Contrato válido!'));\n  expect(res.body.message).to.be.eq('Cadastro realizado com sucesso');\n  _serverest.default.salvarIdUsuario(res);\n});",
              "err": {},
              "uuid": "4851e34d-0e55-49f3-a0e4-7f61f652e7dd",
              "parentUUID": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTP04 - Deve cadastrar um novo usuário administrador com sucesso",
              "fullTitle": "Casos de teste positivos sobre a rota /usuarios da API Serverest CTP04 - Deve cadastrar um novo usuário administrador com sucesso",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarUsuarioAdmComSucesso().then(res => {\n  expect(res.status).to.be.eq(201);\n  cy.contractValidator(res, 'post-usuarios', 201).then(res => expect(res).to.be.eq('Contrato válido!'));\n  expect(res.body.message).to.be.eq('Cadastro realizado com sucesso');\n  _serverest.default.salvarIdUsuarioAdm(res);\n});",
              "err": {},
              "uuid": "13e7faa5-9fa9-48e8-8937-d798bbba3203",
              "parentUUID": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTP05 - Deve buscar um usuário com sucesso",
              "fullTitle": "Casos de teste positivos sobre a rota /usuarios da API Serverest CTP05 - Deve buscar um usuário com sucesso",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUmUsuarioComSucesso().then(res => {\n  expect(res.status).to.be.eq(200);\n  cy.contractValidator(res, 'get-usuarios-id', 200).then(res => expect(res).to.be.eq('Contrato válido!'));\n  expect(res.body._id).to.be.eq(`${Cypress.env(\"idUser\")}`);\n});",
              "err": {},
              "uuid": "c53c2e21-da8d-4305-91d6-795dc959dc3f",
              "parentUUID": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTP06 - Deve editar um usuário com sucesso",
              "fullTitle": "Casos de teste positivos sobre a rota /usuarios da API Serverest CTP06 - Deve editar um usuário com sucesso",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.editarUsuarioComSucesso().then(res => {\n  expect(res.status).to.be.eq(200);\n  cy.contractValidator(res, 'put-usuarios', 200).then(res => expect(res).to.be.eq('Contrato válido!'));\n  expect(res.body.message).to.be.eq('Registro alterado com sucesso');\n});",
              "err": {},
              "uuid": "762a00cf-7332-495f-b3c9-69c78ccb6628",
              "parentUUID": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTP07 - Deve excluir um usuário com sucesso",
              "fullTitle": "Casos de teste positivos sobre a rota /usuarios da API Serverest CTP07 - Deve excluir um usuário com sucesso",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.excluirUsuarioComSucesso().then(res => {\n  expect(res.status).to.be.eq(200);\n  cy.contractValidator(res, 'delete-usuarios', 200).then(res => expect(res).to.be.eq('Contrato válido!'));\n  expect(res.body.message).to.be.eq('Registro excluído com sucesso');\n});",
              "err": {},
              "uuid": "810ae3c7-368b-4551-81cd-2de910992f3f",
              "parentUUID": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve excluir um usuário administrador com sucesso",
              "fullTitle": "Casos de teste positivos sobre a rota /usuarios da API Serverest Deve excluir um usuário administrador com sucesso",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.excluirUsuarioAdmComSucesso().then(res => {\n  expect(res.status).to.be.eq(200);\n  cy.contractValidator(res, 'delete-usuarios', 200).then(res => expect(res).to.be.eq('Contrato válido!'));\n  expect(res.body.message).to.be.eq('Registro excluído com sucesso');\n});",
              "err": {},
              "uuid": "dda19178-0f69-47df-b902-20aae2b70aa4",
              "parentUUID": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTP08 - Deve buscar e salvar um usuário em um arquivo JSON",
              "fullTitle": "Casos de teste positivos sobre a rota /usuarios da API Serverest CTP08 - Deve buscar e salvar um usuário em um arquivo JSON",
              "timedOut": null,
              "duration": 567,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//let inteiro = Factory.gerarInteiroAleatorio()\n_serverest.default.verificarSeExisteUsuario();\n_serverest.default.buscarUsuarios().then(res => {\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[0]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "37d8c8f1-62cb-4ee3-b6e2-c586e11e02cb",
              "parentUUID": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTP09 - Deve logar com um usuário de um arquivo JSON",
              "fullTitle": "Casos de teste positivos sobre a rota /usuarios da API Serverest CTP09 - Deve logar com um usuário de um arquivo JSON",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    expect(res.status).to.be.eq(200);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "fd300b71-4c07-4a71-883c-d04dbeddfe0f",
              "parentUUID": "163e933e-df18-4abe-ae8c-fa5eb8b6170d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3cc415ec-7c9c-45f0-841f-3104c0c593d2",
            "4851e34d-0e55-49f3-a0e4-7f61f652e7dd",
            "13e7faa5-9fa9-48e8-8937-d798bbba3203",
            "c53c2e21-da8d-4305-91d6-795dc959dc3f",
            "762a00cf-7332-495f-b3c9-69c78ccb6628",
            "810ae3c7-368b-4551-81cd-2de910992f3f",
            "dda19178-0f69-47df-b902-20aae2b70aa4",
            "37d8c8f1-62cb-4ee3-b6e2-c586e11e02cb",
            "fd300b71-4c07-4a71-883c-d04dbeddfe0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2982,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}